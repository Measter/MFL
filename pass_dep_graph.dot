strict digraph {
    subgraph passes {
        label = "Passes";

        BuildNames,
        CheckAsserts,
        ConstPropBody,
        CyclicRefCheckBody,

        DeclareStructs,
        DefineStructs,
        EvaluatedConstsAsserts,
        IdentResolvedBody,

        IdentResolvedSignature,
        PartiallyTypeResolved,
        SelfContainingStruct,
        StackAndTypeCheckedBody,

        TerminalBlockCheckBody,
        TypeResolvedBody,
        TypeResolvedSignature,
        ValidAttributes
    }

    subgraph items {
        rank = same;
        node [shape = "box"]
        label = "Items";

        Module;
        StructDef;
        Variable;
        GenericFunction;
        Assert;
        Const;
        Function;
    }

    CheckAsserts -> EvaluatedConstsAsserts;
    ConstPropBody -> StackAndTypeCheckedBody;
    CyclicRefCheckBody -> IdentResolvedBody;

    DeclareStructs -> IdentResolvedSignature;
    DefineStructs -> DeclareStructs;
    EvaluatedConstsAsserts -> CyclicRefCheckBody;
    EvaluatedConstsAsserts -> ConstPropBody;

    PartiallyTypeResolved -> IdentResolvedBody;
    PartiallyTypeResolved -> IdentResolvedSignature;
    SelfContainingStruct -> IdentResolvedSignature;
    StackAndTypeCheckedBody -> TypeResolvedSignature;
    StackAndTypeCheckedBody -> TypeResolvedBody;
    StackAndTypeCheckedBody -> TerminalBlockCheckBody;

    TypeResolvedBody -> IdentResolvedBody;
    TypeResolvedSignature -> IdentResolvedSignature;

    Module -> BuildNames;
    Module -> ValidAttributes;
    Module -> IdentResolvedSignature;
    StructDef -> ValidAttributes;
    StructDef -> SelfContainingStruct;
    StructDef -> DefineStructs;
    Variable -> BuildNames;
    Variable -> ValidAttributes;
    Variable -> TypeResolvedSignature;
    GenericFunction -> ValidAttributes;
    GenericFunction -> PartiallyTypeResolved;
    Assert -> ValidAttributes;
    Assert -> CheckAsserts;
    Const -> ValidAttributes;
    Const -> EvaluatedConstsAsserts;
    Function -> BuildNames;
    Function -> ValidAttributes;
    Function -> ConstPropBody;
}